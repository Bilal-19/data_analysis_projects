# -*- coding: utf-8 -*-
"""medical_data_visualizer.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A48EXu8PSsAIhlnhBwDUazQ8hCLnAEkN
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

# Import data
df = pd.read_csv('/content/medical_examination.csv')  # loading csv file into pandas dataframe

# Add 'overweight' column
df['overweight'] = df['weight']/(df['height'])**2

# Normalize data by making 0 always good and 1 always bad. If the value of 'cholesterol' or 'gluc' is 1, 
# make the value 0. If the value is more than 1, make the value 1.
df['cholesterol'] = pd.cut(df['cholesterol'],bins=[0,1,5],labels=[0,1])
df['gluc'] = pd.cut(df['gluc'],bins=[0,1,5],labels=[0,1])
df['overweight'] = pd.cut(df['overweight'],bins=[0,0.025,0.03],labels=[0,1])

# Draw Categorical Plot
def draw_cat_plot():
    # Create DataFrame for cat plot using `pd.melt` using just the values 
    # from 'cholesterol', 'gluc', 'smoke', 'alco','active', and 'overweight'''
    df_cat = pd.melt(df, id_vars=['id'],value_vars=['cholesterol','gluc','smoke','alco','active','overweight'])

    # Group and reformat the data to split it by 'cardio'. Show the counts of each feature. You will have to rename 
    # one of the columns for the catplot to work correctly.
    df_cat = df[['cholesterol','gluc','smoke','alco','active','overweight','cardio']]
    features = list(df_cat)
    # Draw the catplot with 'sns.catplot()'
    for draw in features:
        # Get the figure for the output
        fig = sns.catplot(x=draw,kind="count",data=df_cat)
    
    # Do not modify the next two lines
    fig.savefig('catplot.png')
    return fig
print(draw_cat_plot())

# global df
# Draw Heat Map
def draw_heat_map():
    global df
    # diastolic pressure is higher than systolic (Keep the correct data with (df['ap_lo'] <= df['ap_hi']))
    df = df.loc[(df['ap_lo'] <= df['ap_hi'])]   # Keeping the correct data

    # height is less than the 2.5th percentile (Keep the correct data with (df['height'] >= df['height'].quantile(0.025)))
    df = df.loc[df['height'] >= df['height'].quantile(0.025)]

    # height is more than the 97.5th percentile
    df = df.loc[df['height'] <= df['height'].quantile(0.975)]

    # weight is less than the 2.5th percentile
    df = df.loc[df['weight'] >= df['weight'].quantile(0.025)]

    # weight is more than the 97.5th percentile
    df = df.loc[df['weight'] <= df['weight'].quantile(0.975)]
                          
    df_heat = df

    # Calculate the correlation matrix
    corr = df.corr() 

    # Generate a mask for the upper triangle
    mask = None
    
    # Set up the matplotlib figure
    fig, ax = plt.subplots(figsize=(10,8))

    # Draw the heatmap with 'sns.heatmap()'
    sns.heatmap(corr,annot=True)

    # Do not modify the next two lines
    fig.savefig('heatmap.png')
    return fig

print(draw_heat_map())